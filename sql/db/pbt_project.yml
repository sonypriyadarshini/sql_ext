name: sql_parent_db
description: ''
version: 0.0.1
author: sony@prophecy.io
language: sql
buildSystem: ''
buildSystemDetails: null
pipelines: {}
datasets: {}
templates: {}
jobs: {}
gemContainer:
  languageVersion: ''
  gemLibsVersion: ''
  gems: {}
  dependencies: null
functions:
  author: null
  createdAt: '2024-09-19 08:57:43'
  udfs: {}
  udafs: {}
  expressions: {}
  airflowFunctions: {}
  businessRules: {}
subgraphs: {}
sqlModels:
  .prophecy/metadata/sqlmodels/mo1:
    name: mo1
    schema:
      entityType: ''
      providerType: Databricks
      fields:
      - name: order_id
        dataType:
          type: Integer
      - name: customer_id
        dataType:
          type: Integer
      - name: order_status
        dataType:
          type: String
      - name: order_category
        dataType:
          type: String
      - name: order_date
        dataType:
          type: Date
      - name: amount
        dataType:
          type: Float
      - name: _rescued_data
        dataType:
          type: String
    description: null
    author: sony@prophecy.io
    files:
    - models/mo1.sql
    - .prophecy/ide/models/mo1.json
    sqlDependencies:
      models: []
      datasets: []
      seeds: []
      sources: []
      snapshots: []
    createdAt: '2024-09-19 08:58:02'
  .prophecy/metadata/sqlmodels/seedOne:
    name: seedOne
    schema:
      entityType: ''
      providerType: Databricks
      fields:
      - name: name
        dataType:
          type: String
      - name: id
        dataType:
          type: Integer
      - name: place
        dataType:
          type: String
      - name: food
        dataType:
          type: String
    description: null
    author: sony@prophecy.io
    files:
    - models/nestedseed/seedOne.sql
    - .prophecy/ide/models/seedOne.json
    sqlDependencies:
      models: []
      datasets: []
      seeds: []
      sources: []
      snapshots: []
    createdAt: '2024-09-19 09:38:09'
sqlSnapshots: {}
sqlTests: {}
sqlMacros:
  .prophecy/metadata/sqlmacros/generate_schema_name:
    name: generate_schema_name
    macroType: expression
    description: null
    author: sony@prophecy.io
    files:
    - macros/generate_schema_name.sql
    - .prophecy/ide/macros/generate_schema_name.json
    createdAt: '2024-09-19 08:57:51'
sqlSeeds:
  .prophecy/metadata/sqlseeds/seed_check:
    name: seed_check
    schema:
      entityType: ''
      providerType: Databricks
      fields:
      - name: name
        dataType:
          type: String
      - name: id
        dataType:
          type: Integer
      - name: place
        dataType:
          type: String
      - name: food
        dataType:
          type: String
    description: null
    author: sony@prophecy.io
    files:
    - seeds/seed_check.csv
    createdAt: '2024-09-19 09:37:06'
sqlSources:
  .prophecy/metadata/sqlsources/hive_metastore_upload_latest:
    name: hive_metastore.upload_latest
    description: null
    author: sony@prophecy.io
    files:
    - prophecy-sources/sources.yml
    createdAt: '2024-09-19 09:24:01'
    tables:
    - name: ordedetails
      schema:
        entityType: ''
        providerType: databricks
        fields:
        - name: order_id
          dataType:
            type: Integer
        - name: customer_id
          dataType:
            type: Integer
        - name: order_status
          dataType:
            type: String
        - name: order_category
          dataType:
            type: String
        - name: order_date
          dataType:
            type: Date
        - name: amount
          dataType:
            type: Double
        - name: _rescued_data
          dataType:
            type: String
      description: Order details capturing customer transactions, statuses, and categories,
        enabling insights into sales performance and customer behavior.
      author: sony@prophecy.io
      createdAt: '2024-09-19 09:24:01'
sqlUnreferencedSources: {}
sqlPipeline:
  name: sqlPipeline
  description: null
  author: sony@prophecy.io
  createdAt: '2024-09-19 08:57:43'
dependencies: []
projectDependencies: {}
flags:
  shouldAddDefaultDependenciesIfAbsent: true
pipelineConfigurations: {}
